System.register(["jimu-core","jimu-arcgis"],(function(e,t){var a={},r={};return{setters:[function(e){a.AbstractMessageAction=e.AbstractMessageAction,a.DataSourceManager=e.DataSourceManager,a.MessageType=e.MessageType,a.MutableStoreManager=e.MutableStoreManager,a.RecordSetChangeType=e.RecordSetChangeType,a.getAppStore=e.getAppStore},function(e){r.loadArcGISJSAPIModules=e.loadArcGISJSAPIModules}],execute:function(){e((()=>{"use strict";var e={74645:e=>{e.exports=r},1810:e=>{e.exports=a}},t={};function o(a){var r=t[a];if(void 0!==r)return r.exports;var s=t[a]={exports:{}};return e[a](s,s.exports,o),s.exports}o.d=(e,t)=>{for(var a in t)o.o(t,a)&&!o.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var s={};return(()=>{o.r(s),o.d(s,{default:()=>r});var e=o(1810),t=o(74645);function a(e,t){let a=null;return e.clone?a=e.clone():(a=t.fromJSON(Object.assign({},e)),a.attributes=Object.assign({},e.attributes)),a}class r extends e.AbstractMessageAction{constructor(){super(...arguments),this.NoLockTriggerLayerWidgets=["Map"]}filterMessageType(t,a){return t===e.MessageType.DataRecordSetChange||t===e.MessageType.DataRecordsSelectionChange||t===e.MessageType.ExtentChange||t===e.MessageType.DataSourceFilterChange}filterMessage(e){return!0}getSettingComponentUri(t,a){return t===e.MessageType.DataRecordsSelectionChange||t===e.MessageType.DataSourceFilterChange?"message-actions/pan-to-action-setting":null}onExecute(r,o){return(0,t.loadArcGISJSAPIModules)(["esri/Graphic"]).then((t=>{var s;let n=null;switch([n]=t,r.type){case e.MessageType.DataRecordSetChange:const t=r;if(t.changeType===e.RecordSetChangeType.Create||t.changeType===e.RecordSetChangeType.Update){let r={};if(t.dataRecordSet&&t.dataRecordSet.records){const e=[];for(let r=0;r<t.dataRecordSet.records.length;r++){const o=t.dataRecordSet.records[r].feature;o&&e.push(a(o,n).geometry)}r={features:e}}e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue.value",r)}break;case e.MessageType.DataRecordsSelectionChange:const c=(0,e.getAppStore)().getState().appConfig.widgets[r.widgetId].manifest.label,u=r;let i={};const d=[];if(u.records){if(u.records[0])if(this.NoLockTriggerLayerWidgets.includes(c)){const e=u.records[0].dataSource.getMainDataSource();if(!(null===(s=null==o?void 0:o.useDataSources)||void 0===s?void 0:s.some((t=>(null==t?void 0:t.mainDataSourceId)===e.id))))break}else{const e=u.records[0].dataSource,t=null==e?void 0:e.getMainDataSource();if(!o.useDataSources.some((e=>(null==e?void 0:e.mainDataSourceId)===t.id)))break}for(let e=0;e<u.records.length;e++){const t=u.records[e].feature;t&&d.push(a(t,n).geometry)}}i={features:d},e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue.value",i);break;case e.MessageType.ExtentChange:const g=r;if(g.getRelatedWidgetIds().includes(this.widgetId))break;const l={value:{features:[g.extent]},relatedWidgets:g.getRelatedWidgetIds()};e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue",l);break;case e.MessageType.DataSourceFilterChange:const S=r,p=e.DataSourceManager.getInstance().getDataSource(S.dataSourceId),M=null==p?void 0:p.getMainDataSource();if(!o.useDataSources.some((e=>(null==e?void 0:e.mainDataSourceId)===M.id)))break;const y={dataSourceId:S.dataSourceId,type:"pan-to-query-params"};e.MutableStoreManager.getInstance().updateStateValue(this.widgetId,"panToActionValue.value",y)}return!0}))}}})(),s})())}}}));